{
  "stats": {
    "suites": 2,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-08T12:49:07.227Z",
    "end": "2019-04-08T12:49:07.523Z",
    "duration": 296,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e5802a93-d5f1-4102-ada0-44938d8d98e8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "980f8203-23fc-45b9-9012-a218e414a954",
        "title": "postModelTests",
        "fullFile": "C:\\Users\\Frank\\Desktop\\repos\\ewd-node-labs-2019\\node-lab-test\\api\\posts\\tests\\testPostsSchema.js",
        "file": "\\api\\posts\\tests\\testPostsSchema.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "postModelTests \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var id = _mongoose2.default.Types.ObjectId().toString(); //generates pseudo random ObjectID \npost = {\n    user: id,\n    title: \"A title\"\n};",
            "err": {},
            "isRoot": false,
            "uuid": "1e8a98ec-7dab-4747-abbe-5541c6a64774",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should validate a post with a user and title",
            "fullTitle": "postModelTests should validate a post with a user and title",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var m = new _postsModel2.default(post);\nm.validate(function (err) {\n    _should2.default.not.exist(err);\n    m.title.should.equal(post.title);\n    m.user.toString().should.equal(post.user);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ba37d23f-4288-41b1-80de-f8515a808cee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should require a user and title",
            "fullTitle": "postModelTests should require a user and title",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var badPost = {\n            message: \"This is not valid\"\n        };\n        var m = new _postsModel2.default(badPost);\n        m.validate(function (err) {\n            var errors = err.errors;\n            errors.should.have.property(\"user\");\n            errors.should.have.property(\"title\");\n            done();\n        });",
            "err": {},
            "isRoot": false,
            "uuid": "d39bf45b-c1a4-4983-8fd1-2e952b03ae08",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should add a comment to a post",
            "fullTitle": "postModelTests should add a comment to a post",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var m = new _postsModel2.default(post);\nm.comments.push({\n    body: \"a comment body\",\n    user: \"5ca22a64816cd8423c27214c\"\n});\nm.validate(function (err) {\n    _should2.default.not.exist(err);\n    m.comments[0].body.should.equal(\"a comment body\");\n    m.comments[0].user.toString().should.equal(\"5ca22a64816cd8423c27214c\");\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7d3f1433-0194-45ca-98cb-463ec31f6d9d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should require a user and body for a comment to a post",
            "fullTitle": "postModelTests should require a user and body for a comment to a post",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var m = new _postsModel2.default(post);\nm.comments.push({\n    acomment: \"this is not a valid comment\"\n});\nm.validate(function (err) {\n    _should2.default.exist(err);\n    var errors = err.errors;\n    errors.should.have.property(\"comments.0.user\");\n    errors.should.have.property(\"comments.0.body\");\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "27a06a70-a056-4417-a3b2-452a2949d20c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ba37d23f-4288-41b1-80de-f8515a808cee",
          "d39bf45b-c1a4-4983-8fd1-2e952b03ae08",
          "7d3f1433-0194-45ca-98cb-463ec31f6d9d",
          "27a06a70-a056-4417-a3b2-452a2949d20c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 16,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "726ac56a-1404-4fd7-9cbd-a60ead797ed2",
        "title": "userModelTests",
        "fullFile": "C:\\Users\\Frank\\Desktop\\repos\\ewd-node-labs-2019\\node-lab-test\\api\\users\\tests\\testUserSchema.js",
        "file": "\\api\\users\\tests\\testUserSchema.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "userModelTests \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var username = \"fxwalsh\";\nvar password = \"pass\";\ntestUser.username = username;\ntestUser.password = password;",
            "err": {},
            "isRoot": false,
            "uuid": "e37a2ac8-be08-467b-ab40-06efc0d1c84d",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should validate a user with a username and password",
            "fullTitle": "userModelTests should validate a user with a username and password",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var m = new _userModel2.default(testUser);\nm.validate(function (err) {\n    _should2.default.not.exist(err);\n    m.username.should.equal(testUser.username);\n    m.password.should.equal(testUser.password);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a7fcabdf-f502-4692-be3e-8a41937d87f9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should require a username and password",
            "fullTitle": "userModelTests should require a username and password",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var user = {\n    auser: \"This is not valid\"\n};\nvar m = new _userModel2.default(user);\nm.validate(function (err) {\n    _should2.default.exist(err);\n    var errors = err.errors;\n    errors.should.have.property(\"username\");\n    errors.should.have.property(\"password\");\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "8faa9734-0b94-408c-9ddd-cb4b7e4b8c2c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should search using username",
            "fullTitle": "userModelTests should search using username",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return callSandboxedFn(this, slice.call(arguments), callback, handleFn);",
            "err": {},
            "isRoot": false,
            "uuid": "80885826-97d6-41e2-be2f-31cc52136ced",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should detect matching passwords",
            "fullTitle": "userModelTests should detect matching passwords",
            "timedOut": false,
            "duration": 232,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// eslint-disable-line no-unused-vars\n                return callSandboxedFn(this, slice.call(arguments), callback, handleAsyncFn);",
            "err": {},
            "isRoot": false,
            "uuid": "9bd83582-579f-4a71-af65-66ba84af5efc",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a7fcabdf-f502-4692-be3e-8a41937d87f9",
          "8faa9734-0b94-408c-9ddd-cb4b7e4b8c2c",
          "80885826-97d6-41e2-be2f-31cc52136ced",
          "9bd83582-579f-4a71-af65-66ba84af5efc"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 239,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}