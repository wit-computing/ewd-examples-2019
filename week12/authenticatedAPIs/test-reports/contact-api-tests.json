{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-09T11:12:46.711Z",
    "end": "2019-04-09T11:12:54.026Z",
    "duration": 7315,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "54347be1-9b1d-4a27-aa3c-967fa47664da",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "3515adb5-851e-4306-85cb-0f1a87786936",
        "title": "Contacts API test",
        "fullFile": "c:\\Users\\Frank\\Desktop\\repos\\ewd-node-labs-2019\\node-lab-test\\test\\testContactsAPI.js",
        "file": "\\test\\testContactsAPI.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return collection of JSON documents",
            "fullTitle": "Contacts API test should return collection of JSON documents",
            "timedOut": false,
            "duration": 2838,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// calling home page api\n(0, _supertest2.default)(_index.app).get('/api/contacts').expect('Content-type', /json/).expect(200) // This is the HTTP response\n.then(function (res) {\n    // HTTP status should be 200\n    res.should.have.property('status').equal(200);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c6187cf6-173d-43a3-9e16-d8f25b7641b4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should add a contact",
            "fullTitle": "Contacts API test should add a contact",
            "timedOut": false,
            "duration": 2292,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.app).post('/api/contacts').send({\n    name: 'Contact 99',\n    address: '123 Strand St',\n    age: 23\n}).expect('Content-type', /json/).expect(201).then(function (res) {\n    res.status.should.equal(201);\n    res.body.should.have.property('_id');\n    res.body.name.should.equal('Contact 99');\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d696fc0b-cc19-47fa-b615-5197e4497ec9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a contact",
            "fullTitle": "Contacts API test should delete a contact",
            "timedOut": false,
            "duration": 1244,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return (0, _supertest2.default)(_index.app).get('/api/contacts').expect('Content-type', /json/).expect(200).then(function (res) {\n    var id = res.body[0]._id;\n    return (0, _supertest2.default)(_index.app).delete('/api/contacts/' + id).expect(204);\n}).then(function (res) {\n    res.status.should.equal(204);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0bbd215e-4480-48ac-9a8c-ab91dbaf425a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c6187cf6-173d-43a3-9e16-d8f25b7641b4",
          "d696fc0b-cc19-47fa-b615-5197e4497ec9",
          "0bbd215e-4480-48ac-9a8c-ab91dbaf425a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6374,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      },
      {
        "uuid": "b21b95ee-11cf-4c4d-85ed-122a82ccc044",
        "title": "Hacker News API test",
        "fullFile": "c:\\Users\\Frank\\Desktop\\repos\\ewd-node-labs-2019\\node-lab-test\\test\\testHackerNewsAPI.js",
        "file": "\\test\\testHackerNewsAPI.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Hacker News API test \"before all\" hook",
            "timedOut": false,
            "duration": 220,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var username = 'user1';\nvar password = 'test1';\ntestUser.username = username;\ntestUser.password = password;\n// calling home page api\n(0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect(200).then(function (res) {\n  // HTTP status should be 200\n  res.should.have.property('status').equal(200);\n  res.body.should.have.property('success').equal(true);\n  token = res.body.token;\n  done();\n}).catch(function (error) {\n  console.error(\"Failed\", error);\n  done(error);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ca88d336-46d6-4900-9e81-c2aaa695a56f",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should get a list of Posts",
            "fullTitle": "Hacker News API test should get a list of Posts",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.app).get('/api/posts').set('Authorization', token).expect('Content-type', /json/).expect(200).then(function (res) {\n      // HTTP status should be 200\n      res.should.have.property('status').equal(200);\n      done();\n    }).catch(function (error) {\n      console.error(\"Failed\", error);\n      done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "d3b552df-c657-469a-94c6-6d6138fd8c08",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should prevent access to posts without valid token",
            "fullTitle": "Hacker News API test should prevent access to posts without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d03653f7-0b4d-4119-b8e1-95509ce50b1f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d3b552df-c657-469a-94c6-6d6138fd8c08",
          "d03653f7-0b4d-4119-b8e1-95509ce50b1f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 10,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      },
      {
        "uuid": "658d92cb-f2a4-430e-a776-14ed9c5db216",
        "title": "Users API test",
        "fullFile": "c:\\Users\\Frank\\Desktop\\repos\\ewd-node-labs-2019\\node-lab-test\\test\\testUsersAPI.js",
        "file": "\\test\\testUsersAPI.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Users API test \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "testUser.username = 'user1';\ntestUser.password = 'test1';\ninvalidUser.username = 'chancer1';\ninvalidUser.password = 'bad1';\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "6f720426-c236-4fc9-96e4-00d45a08aed9",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should register a user",
            "fullTitle": "Users API test should register a user",
            "timedOut": false,
            "duration": 209,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var newUser = {\n            username: \"fred\",\n            password: \"apassword\"\n        };\n        (0, _supertest2.default)(_index.app).post('/api/users').send(newUser).query({\n            action: 'register'\n        }).expect('Content-type', /json/).expect(201) // This is the HTTP response\n        .then(function (res) {\n            // HTTP status should be 200\n            res.should.have.property('status').equal(201);\n            done();\n        }).catch(function (error) {\n            console.error(\"Failed\", error);\n            done(error);\n        });",
            "err": {},
            "isRoot": false,
            "uuid": "f089bda0-eb88-448f-b4e1-9cd70ccb8496",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a user token for valid user",
            "fullTitle": "Users API test should return a user token for valid user",
            "timedOut": false,
            "duration": 212,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return (0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect('Content-type', /json/).expect(200) // This is the HTTP response\n        .then(function (res) {\n            // HTTP status should be 200\n            res.should.have.property('status').equal(200);\n            res.body.success.should.be.true;\n            res.body.token.should.exist;\n        }).catch(function (error) {\n            console.error(\"Failed\", error);\n            throw error;\n        });",
            "err": {},
            "isRoot": false,
            "uuid": "e8f6fa90-a940-4f07-9121-ab06fac2d035",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a user token for valid user",
            "fullTitle": "Users API test should return a user token for valid user",
            "timedOut": false,
            "duration": 211,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "503ebb22-d300-4d29-ac8e-f66619fb829e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should not return a token for invalid user",
            "fullTitle": "Users API test should not return a token for invalid user",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.app).post('/api/users').send(invalidUser).expect('Content-type', /json/).expect(401) // This is the HTTP response\n        .then(function (res) {\n            // HTTP status should be 200\n            res.should.have.property('status').equal(401);\n            res.body.success.should.be.false;\n            _should2.default.not.exist(res.body.token);\n            done();\n        }).catch(function (error) {\n            console.error(\"Failed\", error);\n            done(error);\n        });",
            "err": {},
            "isRoot": false,
            "uuid": "61f8b136-ac14-4094-81a8-b2d93b64b2c4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should require a user name and password",
            "fullTitle": "Users API test should require a user name and password",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c0d27be4-6db3-4bbd-a9ad-a45c46c28124",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f089bda0-eb88-448f-b4e1-9cd70ccb8496",
          "e8f6fa90-a940-4f07-9121-ab06fac2d035",
          "503ebb22-d300-4d29-ac8e-f66619fb829e",
          "61f8b136-ac14-4094-81a8-b2d93b64b2c4",
          "c0d27be4-6db3-4bbd-a9ad-a45c46c28124"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 640,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}